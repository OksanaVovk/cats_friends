{"version":3,"file":"static/js/410.cd317fd7.chunk.js","mappings":"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","sources":["components/StyledImageItemBar.js","components/StyledIconButton.js","components/ContentItem.js","components/StyledButton.js","components/Content.js","components/Banner.js","pages/MainPage.js","redux/cats/catsSelectors.js"],"sourcesContent":["import { ImageListItemBar } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nconst StyledImageItemBar = styled(ImageListItemBar)(({ theme }) => ({\n  transition: \"background-color 0.3s\",\n  \"&:hover\": {\n    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n  },\n}));\n\nexport default StyledImageItemBar;\n","import { IconButton } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\n  transition: 'color 0.3s',\n  '&:hover': {\n    color: theme.palette.secondary.main,\n  },\n  '&.active': {\n    color: theme.palette.secondary.main,\n  },\n}));\n\nexport default StyledIconButton;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport authOperations from '../redux/auth/operations';\nimport { authSelector } from '../redux/auth/authSelectors';\nimport { HashLink } from 'react-router-hash-link';\nimport { toast } from 'react-hot-toast';\nimport { ImageListItem } from '@mui/material';\nimport StyledImageItemBar from './StyledImageItemBar';\nimport StyledIconButton from './StyledIconButton';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport { useRef } from 'react';\n\nconst ContentItem = ({ img, title, id }) => {\n  const isLoggedIn = useSelector(authSelector.selectIsLoggedIn);\n  const user = useSelector(authSelector.selectUser);\n  const likeButtonRef = useRef(null);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      const isFavorite = user.favorite.some(fv => fv.id === id);\n      likeButtonRef.current.classList.toggle('active', isFavorite);\n    }\n  }, [isLoggedIn, user, id, likeButtonRef]);\n\n  const onLikeClick = (event, id) => {\n    event.stopPropagation();\n    if (!isLoggedIn) {\n      toast.error(\n        'Only authorized users can add an image to favorites. Please log in.',\n        {\n          duration: 6000,\n          position: 'top-right',\n        }\n      );\n      navigate('/login');\n    } else {\n      dispatch(authOperations.updateFavorite({ catsId: id }));\n      likeButtonRef.current.classList.toggle('active');\n    }\n  };\n\n  return (\n    <ImageListItem key={id}>\n      <HashLink\n        smooth\n        to={`/blog#${id}`}\n        style={{\n          textDecoration: 'none',\n          cursor: 'pointer',\n          display: 'block',\n          overflow: 'hidden',\n        }}\n      >\n        <img\n          src={`${img}?w=164&h=164&fit=crop&auto=format`}\n          alt={title}\n          loading=\"lazy\"\n          style={{\n            width: '100%',\n            display: 'block',\n          }}\n        />\n      </HashLink>\n\n      <StyledImageItemBar\n        title={title}\n        position=\"bottom\"\n        sx={{ backgroundColor: 'rgba(0, 0, 0, 0.3)' }}\n        actionIcon={\n          <StyledIconButton\n            onClick={event => onLikeClick(event, id)}\n            aria-label={`like ${title}`}\n            sx={{ color: 'rgba(255, 255, 255, 0.8)' }}\n            ref={likeButtonRef}\n          >\n            <FavoriteIcon />\n          </StyledIconButton>\n        }\n      />\n    </ImageListItem>\n  );\n};\n\nexport default ContentItem;\n","import { styled } from \"@mui/material/styles\";\nimport { Button } from \"@mui/material\";\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  width: \"100%\",\n  height: 40,\n  backgroundColor: theme.palette.primary.main,\n  color: theme.palette.black.main,\n  fontSize: 14,\n  transition: \"background-color 0.3s, color 0.3s\",\n  \"&:hover\": {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.white.main,\n  },\n}));\n\nexport default StyledButton;\n","import { useSelector } from 'react-redux';\nimport { catsSelectors } from '../redux/cats/catsSelectors';\nimport ContentItem from './ContentItem';\nimport Loader from './Loader';\nimport { ImageList, Typography, useMediaQuery, Box } from '@mui/material';\n\nconst Content = () => {\n  const isXs = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const isSm = useMediaQuery(\n    theme => theme.breakpoints.up('sm') && theme.breakpoints.down('md')\n  );\n  const isMd = useMediaQuery(theme => theme.breakpoints.up('md'));\n  const getCols = () => {\n    if (isXs) return 1;\n    if (isSm) return 2;\n    if (isMd) return 3;\n    return 3;\n  };\n\n  const itemData = useSelector(catsSelectors.selectCats);\n  const isError = useSelector(catsSelectors.selectCatsError);\n  const isLoading = useSelector(catsSelectors.selectCatsIsLoading);\n\n  return (\n    <Box\n      sx={{\n        padding: { xs: '30px 30px 50px 30px', md: '50px' },\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        flex: 1,\n      }}\n    >\n      <Typography\n        variant=\"h2\"\n        sx={{\n          marginBottom: '20px',\n          textAlign: 'center',\n          fontSize: { xs: '2rem', md: '3rem' },\n        }}\n      >\n        Waiting for their owners\n      </Typography>\n      {isLoading && <Loader />}\n      {isError ? (\n        <Typography gutterBottom variant=\"h5\">\n          Request error\n        </Typography>\n      ) : (\n        <ImageList\n          sx={{ width: '100%' }}\n          gap={12}\n          cols={getCols()}\n          variant=\"masonry\"\n        >\n          {itemData.map(item => (\n            <ContentItem\n              key={item._id}\n              img={item.img}\n              title={item.title}\n              id={item._id}\n            />\n          ))}\n        </ImageList>\n      )}\n    </Box>\n  );\n};\n\nexport default Content;\n","import { Box, Typography } from '@mui/material';\nimport StyledButton from './StyledButton';\n\nconst Banner = () => {\n  const onBtnClick = () => {\n    window.open(\n      'https://www.google.com/search?q=притулок+для+тварин+україна',\n      '_blank'\n    );\n  };\n  return (\n    <Box\n      sx={{\n        padding: { xs: '40px 30px 50px 30px', md: '60px 50px 100px 50px' },\n        display: 'flex',\n        marginTop: '7px',\n        flexDirection: { xs: 'column', md: 'row' },\n        backgroundColor: '#FAFAFA',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: 'auto',\n        flex: 1,\n      }}\n    >\n      <Box\n        sx={{\n          marginRight: { md: '30px' },\n        }}\n      >\n        <img\n          src={process.env.PUBLIC_URL + '/images/banner-cat1.webp'}\n          alt=\"cat\"\n          style={{ width: '100%', objectFit: 'contain' }}\n          loading=\"lazy\"\n        />\n      </Box>\n      <Box>\n        <Typography\n          variant=\"h5\"\n          sx={{\n            marginBottom: { xs: '20px', md: '25px' },\n          }}\n        >\n          Our motto\n        </Typography>\n        <Typography\n          variant=\"h1\"\n          sx={{\n            marginBottom: { xs: '20px', md: '25px' },\n            fontSize: { xs: '2.5rem', md: '4rem' },\n          }}\n        >\n          Help animals\n        </Typography>\n        <Typography\n          variant=\"body1\"\n          sx={{\n            marginBottom: { xs: '20px', md: '25px' },\n          }}\n        >\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec\n          odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla\n          quis sem at nibh elementum imperdiet. Duis sagittis ipsum.\n        </Typography>\n        <StyledButton onClick={onBtnClick}>Donate</StyledButton>\n      </Box>\n    </Box>\n  );\n};\nexport default Banner;\n","import Content from 'components/Content';\nimport Banner from 'components/Banner';\n\nconst MainPage = () => {\n  return (\n    <>\n      <Banner />\n      <Content />\n    </>\n  );\n};\nexport default MainPage;\n","const selectCats = state => state.cats.data;\nconst selectCatsIsLoading = state => state.cats.isLoading;\nconst selectCatsError = state => state.cats.error;\n\nexport const catsSelectors = {\n  selectCats,\n  selectCatsIsLoading,\n  selectCatsError,\n};\n"],"names":["styled","ImageListItemBar","theme","transition","backgroundColor","IconButton","color","palette","secondary","main","img","title","id","isLoggedIn","useSelector","authSelector","user","likeButtonRef","useRef","navigate","useNavigate","dispatch","useDispatch","useEffect","isFavorite","favorite","some","fv","current","classList","toggle","ImageListItem","smooth","to","style","textDecoration","cursor","display","overflow","src","alt","loading","width","position","sx","actionIcon","onClick","event","stopPropagation","authOperations","catsId","toast","duration","onLikeClick","ref","Favorite","StyledButton","Button","height","primary","black","fontSize","white","isXs","useMediaQuery","breakpoints","down","isSm","up","itemData","catsSelectors","isError","isLoading","Box","padding","xs","md","minHeight","flexDirection","alignItems","flex","Typography","variant","marginBottom","textAlign","Loader","gutterBottom","ImageList","gap","cols","map","item","ContentItem","_id","marginTop","justifyContent","marginRight","process","objectFit","window","open","selectCats","state","cats","data","selectCatsIsLoading","selectCatsError","error"],"sourceRoot":""}